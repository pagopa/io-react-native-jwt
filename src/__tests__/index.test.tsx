import { decode } from '..';

describe('decode', () => {
  it('should decode a valid unsigned token', () => {
    // This token resolves although is not signed
    // https://jwt.io/#debugger-io?token=eyJhbGciOiJFUzI1NiJ9.eyJfc2QiOlsiMDl2S3JKTU9seVRXTTBzanB1X3BkT0JWQlEyTTF5M0tocEg1MTVuWGtwWSIsIjJyc2pHYmFDMGt5OG1UMHBKclBpb1dUcTBfZGF3MXNYNzZwb1VsZ0N3YkkiLCJFa084ZGhXMGRIRUpidlVIbEVfVkNldUM5dVJFTE9pZUxaaGg3WGJVVHRBIiwiSWxEeklLZWlaZER3cHFwSzZaZmJ5cGhGdno1RmduV2Etc042d3FRWENpdyIsIkp6WWpINHN2bGlIMFIzUHlFTWZlWnU2SnQ2OXU1cWVoWm83RjdFUFlsU0UiLCJQb3JGYnBLdVZ1Nnh5bUphZ3ZrRnNGWEFiUm9jMkpHbEFVQTJCQTRvN2NJIiwiVEdmNG9MYmd3ZDVKUWFIeUtWUVpVOVVkR0UwdzVydERzclp6ZlVhb21MbyIsImpkclRFOFljYlk0RWlmdWdpaGlBZV9CUGVreEpRWklDZWlVUXdZOVFxeEkiLCJqc3U5eVZ1bHdRUWxoRmxNXzNKbHpNYVNGemdsaFFHMERwZmF5UXdMVUs0Il0sImlzcyI6Imh0dHBzOi8vZXhhbXBsZS5jb20vaXNzdWVyIiwiaWF0IjoxNjgzMDAwMDAwLCJleHAiOjE4ODMwMDAwMDAsInR5cGUiOiJJZGVudGl0eUNyZWRlbnRpYWwiLCJfc2RfYWxnIjoic2hhLTI1NiIsImNuZiI6eyJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJQLTI1NiIsIngiOiJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwieSI6Ilp4amlXV2JaTVFHSFZXS1ZRNGhiU0lpcnNWZnVlY0NFNnQ0alQ5RjJIWlEifX19
    const token =
      'eyJhbGciOiJFUzI1NiJ9.eyJfc2QiOlsiMDl2S3JKTU9seVRXTTBzanB1X3BkT0JWQlEyTTF5M0tocEg1MTVuWGtwWSIsIjJyc2pHYmFDMGt5OG1UMHBKclBpb1dUcTBfZGF3MXNYNzZwb1VsZ0N3YkkiLCJFa084ZGhXMGRIRUpidlVIbEVfVkNldUM5dVJFTE9pZUxaaGg3WGJVVHRBIiwiSWxEeklLZWlaZER3cHFwSzZaZmJ5cGhGdno1RmduV2Etc042d3FRWENpdyIsIkp6WWpINHN2bGlIMFIzUHlFTWZlWnU2SnQ2OXU1cWVoWm83RjdFUFlsU0UiLCJQb3JGYnBLdVZ1Nnh5bUphZ3ZrRnNGWEFiUm9jMkpHbEFVQTJCQTRvN2NJIiwiVEdmNG9MYmd3ZDVKUWFIeUtWUVpVOVVkR0UwdzVydERzclp6ZlVhb21MbyIsImpkclRFOFljYlk0RWlmdWdpaGlBZV9CUGVreEpRWklDZWlVUXdZOVFxeEkiLCJqc3U5eVZ1bHdRUWxoRmxNXzNKbHpNYVNGemdsaFFHMERwZmF5UXdMVUs0Il0sImlzcyI6Imh0dHBzOi8vZXhhbXBsZS5jb20vaXNzdWVyIiwiaWF0IjoxNjgzMDAwMDAwLCJleHAiOjE4ODMwMDAwMDAsInR5cGUiOiJJZGVudGl0eUNyZWRlbnRpYWwiLCJfc2RfYWxnIjoic2hhLTI1NiIsImNuZiI6eyJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJQLTI1NiIsIngiOiJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwieSI6Ilp4amlXV2JaTVFHSFZXS1ZRNGhiU0lpcnNWZnVlY0NFNnQ0alQ5RjJIWlEifX19';

    const result = decode(token);

    expect(result).toEqual({
      header: expect.any(Object),
      payload: expect.any(Object),
    });
  });
});
